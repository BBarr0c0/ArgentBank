openapi: 3.1.0
info:
  title: Bank Argent API - Transactions Module
  description: API endpoints for managing user transactions and labels
  version: '1.1.0'
  termsOfService: 'http://swagger.io/terms/'
  contact:
    name: API Support
    email: support@bankargent.com
servers:
  - url: http://localhost:3001/api/v1
security:
  - bearerAuth: []
tags:
  - name: Transactions
    description: Everything related to banking transactions
  - name: Labels
    description: Manage labels for transactions
    
paths:

  /account/{accountID}/transactions:
    get:
      tags:
        - Transactions
      summary: Retrieve all transactions for the current month grouped by account
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Attach Bearer JWT token
        - in: path
          name: accountID
          schema:
            type: string
          required: true
          description: Account ID
      responses:
        '200':
          description: List of transactions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfTransactions'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'

  /transaction/{transactionId}:
    get:
      tags:
        - Transactions
      summary: Retrieve transaction details
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Attach Bearer JWT token
        - in: path
          name: transactionId
          schema:
            type: string
          required: true
          description: Transaction ID
      responses:
        '200':
          description: Transaction details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '404':
          description: Transaction not found
        '500':
          $ref: '#/components/responses/ServerError'

  /transaction/{transactionId}/labels:
    post:
      tags:
        - Labels
      summary: Add a label to a transaction
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Attach Bearer JWT token
        - in: path
          name: transactionId
          schema:
            type: string
          required: true
          description: Transaction ID
      requestBody:
        description: Label details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelCreate'
      responses:
        '201':
          description: Label added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
        '400':
          $ref: '#/components/responses/InvalidFields'
        '500':
          $ref: '#/components/responses/ServerError'

  /transaction/{transactionId}/labels/{labelId}:
    patch:
      tags:
        - Labels
      summary: Modify a label of a transaction
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Attach Bearer JWT token
        - in: path
          name: transactionId
          schema:
            type: string
          required: true
          description: Transaction ID
        - in: path
          name: labelId
          schema:
            type: string
          required: true
          description: Label ID
      requestBody:
        description: Update label attributes
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelUpdate'
      responses:
        '200':
          description: Label updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
        '400':
          $ref: '#/components/responses/InvalidFields'
        '404':
          description: Label not found
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      tags:
        - Labels
      summary: Remove a label from a transaction
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Attach Bearer JWT token
        - in: path
          name: transactionId
          schema:
            type: string
          required: true
          description: Transaction ID
        - in: path
          name: labelId
          schema:
            type: string
          required: true
          description: Label ID
      responses:
        '200':
          description: Label deleted successfully
        '404':
          description: Label not found
        '500':
          $ref: '#/components/responses/ServerError'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Transaction:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
        amount:
          type: number
        type:
          type: string
          enum: [credit, debit]
    ArrayOfTransactions:
      type: array
      items:
        $ref: '#/components/schemas/Transaction'
    Label:
      type: object
      properties:
        id:
          type: string
        transactionId:
          type: string
        category:
          type: string
        description:
          type: string
    LabelCreate:
      type: object
      properties:
        category:
          type: string
        description:
          type: string
    LabelUpdate:
      type: object
      properties:
        category:
          type: string
        description:
          type: string
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
    ServerError:
      description: Internal Server Error
    InvalidFields:
      description: Invalid input fields
